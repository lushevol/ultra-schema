/* eslint-disable */ /**
 *
 * THIS FILE IS AUTOGENERATED, DO NOT EDIT IT!
 *
 * instead, edit one of the `.graphql` files in this project and run
 *
 * npm run graphql-codegen
 *
 * for this file to be re-created
 */

import type * as Types from '../../rtk-query/types.generated';

import { api } from 'src/rtk-query/baseGraphQLApi';
module.hot?.accept();
export type GenericConfigListQueryQueryVariables = Types.Exact<{
  query: Types.UltraQueryInput;
}>;

export type GenericConfigListQueryQuery = {
  __typename?: 'Query';
  genericConfigs?: {
    __typename?: 'UltraQueryResult';
    index?: number;
    offset?: number;
    total?: number;
    latest?: boolean;
    data?: Array<{
      __typename?: 'GenericConfig';
      key: string;
      config: string;
      validation: string;
      version: number;
    }>;
  };
};

export type GenericConfigByKeyQueryQueryVariables = Types.Exact<{
  key: Types.Scalars['String']['input'];
}>;

export type GenericConfigByKeyQueryQuery = {
  __typename?: 'Query';
  genericConfig?: {
    __typename?: 'GenericConfig';
    key: string;
    config: string;
    validation: string;
    version: number;
  };
};

export type GenericConfigUpdateMutationMutationVariables = Types.Exact<{
  key: Types.Scalars['String']['input'];
  payload: Types.MutableGenericConfigInput;
}>;

export type GenericConfigUpdateMutationMutation = {
  __typename?: 'Mutation';
  updateGenericConfig?: {
    __typename?: 'GenericConfig';
    key: string;
    config: string;
    validation: string;
    version: number;
  };
};

export type AddGenericConfigMutationMutationVariables = Types.Exact<{
  addGenericConfigInput: Types.AddGenericConfigInput;
}>;

export type AddGenericConfigMutationMutation = {
  __typename?: 'Mutation';
  addGenericConfig?: {
    __typename?: 'GenericConfig';
    key: string;
    config: string;
    validation: string;
    version: number;
  };
};

export type RemoveGenericConfigMutationMutationVariables = Types.Exact<{
  key: Types.Scalars['String']['input'];
}>;

export type RemoveGenericConfigMutationMutation = {
  __typename?: 'Mutation';
  removeGenericConfig?: boolean;
};

export type OnGenericConfigUpdatedSubscriptionSubscriptionVariables =
  Types.Exact<{
    query: Types.Scalars['String']['input'];
  }>;

export type OnGenericConfigUpdatedSubscriptionSubscription = {
  __typename?: 'Subscription';
  onGenericConfigUpdated?: Array<{
    __typename?: 'GenericConfigChangeNotification';
    status: Types.GenericConfigChangeStatus;
    data?: {
      __typename?: 'GenericConfig';
      key: string;
      config: string;
      validation: string;
      version: number;
    };
  }>;
};

export const GenericConfigListQueryDocument = `
    query GenericConfigListQuery($query: UltraQueryInput!) {
  genericConfigs(query: $query) {
    data {
      key
      config
      validation
      version
    }
    index
    offset
    total
    latest
  }
}
    `;
export const GenericConfigByKeyQueryDocument = `
    query GenericConfigByKeyQuery($key: String!) {
  genericConfig(key: $key) {
    key
    config
    validation
    version
  }
}
    `;
export const GenericConfigUpdateMutationDocument = `
    mutation GenericConfigUpdateMutation($key: String!, $payload: MutableGenericConfigInput!) {
  updateGenericConfig(key: $key, payload: $payload) {
    key
    config
    validation
    version
  }
}
    `;
export const AddGenericConfigMutationDocument = `
    mutation AddGenericConfigMutation($addGenericConfigInput: AddGenericConfigInput!) {
  addGenericConfig(addGenericConfigInput: $addGenericConfigInput) {
    key
    config
    validation
    version
  }
}
    `;
export const RemoveGenericConfigMutationDocument = `
    mutation RemoveGenericConfigMutation($key: String!) {
  removeGenericConfig(key: $key)
}
    `;
export const OnGenericConfigUpdatedSubscriptionDocument = `
    subscription OnGenericConfigUpdatedSubscription($query: String!) {
  onGenericConfigUpdated(query: $query) {
    status
    data {
      key
      config
      validation
      version
    }
  }
}
    `;

const injectedRtkApi = api.injectEndpoints({
  overrideExisting: module.hot?.status() === 'apply',
  endpoints: (build) => ({
    GenericConfigListQuery: build.query<
      GenericConfigListQueryQuery,
      GenericConfigListQueryQueryVariables
    >({
      query: (variables) => ({
        document: GenericConfigListQueryDocument,
        variables,
      }),
    }),
    GenericConfigByKeyQuery: build.query<
      GenericConfigByKeyQueryQuery,
      GenericConfigByKeyQueryQueryVariables
    >({
      query: (variables) => ({
        document: GenericConfigByKeyQueryDocument,
        variables,
      }),
    }),
    GenericConfigUpdateMutation: build.mutation<
      GenericConfigUpdateMutationMutation,
      GenericConfigUpdateMutationMutationVariables
    >({
      query: (variables) => ({
        document: GenericConfigUpdateMutationDocument,
        variables,
      }),
    }),
    AddGenericConfigMutation: build.mutation<
      AddGenericConfigMutationMutation,
      AddGenericConfigMutationMutationVariables
    >({
      query: (variables) => ({
        document: AddGenericConfigMutationDocument,
        variables,
      }),
    }),
    RemoveGenericConfigMutation: build.mutation<
      RemoveGenericConfigMutationMutation,
      RemoveGenericConfigMutationMutationVariables
    >({
      query: (variables) => ({
        document: RemoveGenericConfigMutationDocument,
        variables,
      }),
    }),
  }),
});

export { injectedRtkApi as api };
export const {
  useGenericConfigListQueryQuery,
  useLazyGenericConfigListQueryQuery,
  useGenericConfigByKeyQueryQuery,
  useLazyGenericConfigByKeyQueryQuery,
  useGenericConfigUpdateMutationMutation,
  useAddGenericConfigMutationMutation,
  useRemoveGenericConfigMutationMutation,
} = injectedRtkApi;
