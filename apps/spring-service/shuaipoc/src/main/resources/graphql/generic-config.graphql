# version: 1.0.0

type Query {
  genericConfigs(ultraQueryInput: UltraQueryInput!): UltraQueryResult
  genericConfig(key: String!): GenericConfig
}

type Mutation {
  addGenericConfig(addGenericConfigInput: AddGenericConfigInput!): GenericConfig
  removeGenericConfig(key: String!): Boolean
  updateGenericConfig(
    key: String!
    payload: MutableGenericConfigInput
  ): GenericConfig
}

type Subscription {
  onGenericConfigUpdated(query: String!): [GenericConfigChangeNotification]
}

type GenericConfig {
  key: String!
  config: String!
  validation: String!
  version: Int!
}

input AddGenericConfigInput {
  key: String!
  config: String!
  validation: String
}

input MutableGenericConfigInput {
  key: String!
  config: String
  validation: String
}

input UltraQueryInput {
  query: String!
  index: Int!
  offset: Int!
  sorting: [SortModel]
  rowGroups: [RowGroupModel]
  groupKeys: [String]
}

input SortModel {
  field: String!
  sort: Sort!
}

input RowGroupModel {
  field: String!
  aggFunc: String!
}

type UltraQueryResult {
  total: Int
  index: Int
  offset: Int
  latest: Boolean
  data: [GenericConfig]
}

enum Sort {
  ASC
  DESC
}

type GenericConfigChangeNotification {
  status: GenericConfigChangeStatus!
  data: GenericConfig
}

enum GenericConfigChangeStatus {
  UPDATED
  DELETED
  ADDED
}
